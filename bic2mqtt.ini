# ini file for bic2mqtt.py
[ALL]
TraceLevel="debug"
TraceFilePath=""

# mqtt ip address and account stuff to connect to the broker
[MQTT]
BrokerIpAdr="127.0.0.1"
BrokerAccUser="foo"
BrokerAccPasswd="bar"
# main topic
TopicMain="haus/power/bat"

#device config 
[DEVICE]
# possible types:BIC2200-24CAN,...
Id/0/Type="BIC2200-24CAN"
#Id/0/CanBitrate=250000
Id/0/ChargeVoltage=2660
Id/0/DischargeVoltage=2560
Id/0/MaxChargeCurrent=0200
Id/0/MaxDischargeCurrent=0210


[BAT_0]
# SOC (State of charge) capacity-battery table [%] to volatge [V], only valid if no charging/discharging is running  
Cap2V/0     =19.00
Cap2V/1     =21.60
Cap2V/10    =25.60
Cap2V/20    =25.80
Cap2V/30    =26.00
Cap2V/40    =26.20
Cap2V/50    =26.27
Cap2V/60    =26.34
Cap2V/70    =26.40
Cap2V/80    =26.50
Cap2V/90    =26.60
Cap2V/99    =26.80
Cap2V/100   =27.00

# Contol and regulator
[CHARGE_CONTROL]
# 0: disable this controller
Id/0/Enabled=1
# topic to subscribe power values from smart meter [W] <0:power to public-grid, >0 power-consumption from public.grid
Id/0/TopicPower="power/grid/smartmeter"
# def: 60[s] skip short discharge bursts
Id/0/DischargeBlockTimeSec=61
# def: 10[W] don't set new charge value if the running one is nearby 
Id/0/ChargeTol=10
# def: 0[W] offset power for the calculation, move the zero point of power balance
Id/0/ChargePowerOffset=0
# def:-1 [0..23] start interval hour of day to block discharging
Id/0/DischargeBlockHourStart=-1
# def:-1 [0..23] stop interval hour of day to block discharging
Id/0/DischargeBlockHourStop=-1
# regulator loop gain for new power settings
#Id/0/LoopGain=0.5
